/*
 * This file was generated by qdbusxml2cpp version 0.7
 * Command line was: qdbusxml2cpp com.coderfrog.qcompanion.xml -a dbusadaptor
 *
 * qdbusxml2cpp is Copyright (C) 2013 Digia Plc and/or its subsidiary(-ies).
 *
 * This is an auto-generated file.
 * This file may have been hand-edited. Look for HAND-EDIT comments
 * before re-generating it.
 */

#ifndef DBUSADAPTOR_H_1390521166
#define DBUSADAPTOR_H_1390521166

#include <QtCore/QObject>
#include <QtDBus/QtDBus>
class QByteArray;
template <class T> class QList;
template <class Key, class Value> class QMap;
class QString;
class QStringList;
class QVariant;

/*
 * Adaptor class for interface com.coderfrog.qcompanion
 */
class QcompanionAdaptor : public QDBusAbstractAdaptor
{
  Q_OBJECT
  Q_CLASSINFO("D-Bus Interface", "com.coderfrog.qcompanion")
  Q_CLASSINFO("D-Bus Introspection",
              ""
              "  <interface name=\"com.coderfrog.qcompanion\">\n"
              "    <method name=\"quit\"/>\n"
              "    <method name=\"speakClipboard\"/>\n"
              "    <method name=\"toggleNotifications\"/>\n"
              "    <method name=\"toggleTTS\"/>\n"
              "    <method name=\"sendToSpeaker\">\n"
              "      <arg direction=\"in\" type=\"s\" name=\"sayMe\"/>\n"
              "    </method>\n"
              "    <method name=\"displayMessage\">\n"
              "      <arg direction=\"in\" type=\"s\" name=\"message\"/>\n"
              "    </method>\n"
              "  </interface>\n"
              "")
public:
  QcompanionAdaptor(QObject *parent);
  virtual ~QcompanionAdaptor();

public:         // PROPERTIES
public Q_SLOTS: // METHODS
  void displayMessage(const QString &message);
  void quit();
  void sendToSpeaker(const QString &sayMe);
  void speakClipboard();
  void toggleNotifications();
  void toggleTTS();
Q_SIGNALS: // SIGNALS
};

/*
 * Adaptor class for interface com.coderfrog.qcompanion.hourreader
 */
class HourreaderAdaptor : public QDBusAbstractAdaptor
{
  Q_OBJECT
  Q_CLASSINFO("D-Bus Interface", "com.coderfrog.qcompanion.hourreader")
  Q_CLASSINFO("D-Bus Introspection",
              ""
              "  <interface name=\"com.coderfrog.qcompanion.hourreader\">\n"
              "    <method name=\"getText\">\n"
              "      <arg direction=\"out\" type=\"s\"/>\n"
              "    </method>\n"
              "  </interface>\n"
              "")
public:
  HourreaderAdaptor(QObject *parent);
  virtual ~HourreaderAdaptor();

public:         // PROPERTIES
public Q_SLOTS: // METHODS
  QString getText();
Q_SIGNALS: // SIGNALS
};

/*
 * Adaptor class for interface com.coderfrog.qcompanion.qlipper
 */
class QlipperAdaptor : public QDBusAbstractAdaptor
{
  Q_OBJECT
  Q_CLASSINFO("D-Bus Interface", "com.coderfrog.qcompanion.qlipper")
  Q_CLASSINFO("D-Bus Introspection",
              ""
              "  <interface name=\"com.coderfrog.qcompanion.qlipper\">\n"
              "    <method name=\"showDialog\"/>\n"
              "    <method name=\"setLogEnabled\">\n"
              "      <arg direction=\"in\" type=\"b\" name=\"enabled\"/>\n"
              "    </method>\n"
              "    <method name=\"setFileLocation\"/>\n"
              "    <method name=\"setMuteSettings\">\n"
              "      <arg direction=\"in\" type=\"b\" name=\"shouldMute\"/>\n"
              "    </method>\n"
              "  </interface>\n"
              "")
public:
  QlipperAdaptor(QObject *parent);
  virtual ~QlipperAdaptor();

public:         // PROPERTIES
public Q_SLOTS: // METHODS
  void setFileLocation();
  void setLogEnabled(bool enabled);
  void setMuteSettings(bool shouldMute);
  void showDialog();
Q_SIGNALS: // SIGNALS
};

/*
 * Adaptor class for interface com.coderfrog.qcompanion.qsnapper
 */
class QsnapperAdaptor : public QDBusAbstractAdaptor
{
  Q_OBJECT
  Q_CLASSINFO("D-Bus Interface", "com.coderfrog.qcompanion.qsnapper")
  Q_CLASSINFO("D-Bus Introspection",
              ""
              "  <interface name=\"com.coderfrog.qcompanion.qsnapper\">\n"
              "    <method name=\"snap\">\n"
              "      <arg direction=\"out\" type=\"b\"/>\n"
              "    </method>\n"
              "    <method name=\"enableSnapping\">\n"
              "      <arg direction=\"in\" type=\"b\" name=\"enable\"/>\n"
              "    </method>\n"
              "    <method name=\"setLenient\">\n"
              "      <arg direction=\"in\" type=\"b\" name=\"isLenient\"/>\n"
              "    </method>\n"
              "    <method name=\"setMuteSettings\">\n"
              "      <arg direction=\"in\" type=\"b\" name=\"shouldMute\"/>\n"
              "    </method>\n"
              "    <method name=\"setDiff\">\n"
              "      <arg direction=\"in\" type=\"b\" name=\"enable\"/>\n"
              "    </method>\n"
              "  </interface>\n"
              "")
public:
  QsnapperAdaptor(QObject *parent);
  virtual ~QsnapperAdaptor();

public:         // PROPERTIES
public Q_SLOTS: // METHODS
  void enableSnapping(bool enable);
  void setDiff(bool enable);
  void setLenient(bool isLenient);
  void setMuteSettings(bool shouldMute);
  bool snap();
Q_SIGNALS: // SIGNALS
};

/*
 * Adaptor class for interface com.coderfrog.qcompanion.speaker
 */
class SpeakerAdaptor : public QDBusAbstractAdaptor
{
  Q_OBJECT
  Q_CLASSINFO("D-Bus Interface", "com.coderfrog.qcompanion.speaker")
  Q_CLASSINFO("D-Bus Introspection",
              ""
              "  <interface name=\"com.coderfrog.qcompanion.speaker\">\n"
              "    <method name=\"speak\">\n"
              "      <arg direction=\"in\" type=\"s\" name=\"speakMe\"/>\n"
              "    </method>\n"
              "    <method name=\"setNotificationsEnabled\">\n"
              "      <arg direction=\"in\" type=\"b\" name=\"enable\"/>\n"
              "    </method>\n"
              "    <method name=\"setTTSEnabled\">\n"
              "      <arg direction=\"in\" type=\"b\" name=\"enable\"/>\n"
              "    </method>\n"
              "    <method name=\"isNotificationsEnabled\">\n"
              "      <arg direction=\"out\" type=\"b\"/>\n"
              "    </method>\n"
              "    <method name=\"isTTSEnabled\">\n"
              "      <arg direction=\"out\" type=\"b\"/>\n"
              "    </method>\n"
              "  </interface>\n"
              "")
public:
  SpeakerAdaptor(QObject *parent);
  virtual ~SpeakerAdaptor();

public:         // PROPERTIES
public Q_SLOTS: // METHODS
  bool isNotificationsEnabled();
  bool isTTSEnabled();
  void setNotificationsEnabled(bool enable);
  void setTTSEnabled(bool enable);
  void speak(const QString &speakMe);
Q_SIGNALS: // SIGNALS
};

/*
 * Adaptor class for interface com.coderfrog.waiter
 */
class WaiterAdaptor : public QDBusAbstractAdaptor
{
  Q_OBJECT
  Q_CLASSINFO("D-Bus Interface", "com.coderfrog.waiter")
  Q_CLASSINFO("D-Bus Introspection",
              ""
              "  <interface name=\"com.coderfrog.waiter\">\n"
              "    <method name=\"selectStatePath\"/>\n"
              "  </interface>\n"
              "")
public:
  WaiterAdaptor(QObject *parent);
  virtual ~WaiterAdaptor();

public:         // PROPERTIES
public Q_SLOTS: // METHODS
  void selectStatePath();
Q_SIGNALS: // SIGNALS
};

#endif
